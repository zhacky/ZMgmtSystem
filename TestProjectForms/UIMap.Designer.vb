'------------------------------------------------------------------------------
'  <auto-generated>
'      This code was generated by coded UI test builder.
'      Version: 10.0.0.0
'
'      Changes to this file may cause incorrect behavior and will be lost if
'      the code is regenerated.
'  </auto-generated>
' ------------------------------------------------------------------------------

Imports System
Imports System.CodeDom.Compiler
Imports System.Collections.Generic
Imports System.Drawing
Imports System.Text.RegularExpressions
Imports System.Windows.Input
Imports Microsoft.VisualStudio.TestTools.UITest.Extension
Imports Microsoft.VisualStudio.TestTools.UITesting
Imports Microsoft.VisualStudio.TestTools.UITesting.WinControls
Imports Microsoft.VisualStudio.TestTools.UnitTesting
Imports Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard
Imports Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse
Imports MouseButtons = System.Windows.Forms.MouseButtons

Namespace TestProjectForms
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Partial Public Class UIMap
        
        '''<summary>
        '''RecordedMethodTestAddNew
        '''</summary>
        Public Sub RecordedMethodTestAddNew()
            Dim uIVshost32clr2exeMenuButton As WinControl = Me.UIRunningapplicationsWindow.UIRunningapplicationsToolBar.UIVshost32clr2exeMenuButton
            Dim uIAddNewButton As WinButton = Me.UIUsersWindow.UIAddNewWindow.UIAddNewButton

            'Move 'vshost32-clr2.exe' MenuButton from (21, 8) to (25, 19)
            Mouse.StartDragging(uIVshost32clr2exeMenuButton, New Point(21, 8))
            Mouse.StopDragging(uIVshost32clr2exeMenuButton, 4, 11)

            'Click 'Add New' button
            Mouse.Click(uIAddNewButton, New Point(33, 5))

            'Click 'Add New' button
            Mouse.Click(uIAddNewButton, New Point(33, 5))
        End Sub
        
        '''<summary>
        '''RecordedMethodTestAddNew2
        '''</summary>
        Public Sub RecordedMethodTestAddNew2()
            Dim uIVshost32clr2exeMenuButton As WinControl = Me.UIRunningapplicationsWindow.UIRunningapplicationsToolBar.UIVshost32clr2exeMenuButton
            Dim uIAddNewButton As WinButton = Me.UIUsersWindow.UIAddNewWindow.UIAddNewButton

            'Move 'vshost32-clr2.exe' MenuButton from (21, 8) to (25, 19)
            Mouse.StartDragging(uIVshost32clr2exeMenuButton, New Point(21, 8))
            Mouse.StopDragging(uIVshost32clr2exeMenuButton, 4, 11)

            'Click 'Add New' button
            Mouse.Click(uIAddNewButton, New Point(33, 5))

            'Click 'Add New' button
            Mouse.Click(uIAddNewButton, New Point(33, 5))

            'Click 'Add New' button
            Mouse.Click(uIAddNewButton, New Point(35, 14))
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIRunningapplicationsWindow() As UIRunningapplicationsWindow
            Get
                If (Me.mUIRunningapplicationsWindow Is Nothing) Then
                    Me.mUIRunningapplicationsWindow = New UIRunningapplicationsWindow()
                End If
                Return Me.mUIRunningapplicationsWindow
            End Get
        End Property
        
        Public ReadOnly Property UIUsersWindow() As UIUsersWindow
            Get
                If (Me.mUIUsersWindow Is Nothing) Then
                    Me.mUIUsersWindow = New UIUsersWindow()
                End If
                Return Me.mUIUsersWindow
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIRunningapplicationsWindow As UIRunningapplicationsWindow
        
        Private mUIUsersWindow As UIUsersWindow
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UIRunningapplicationsWindow
        Inherits WinWindow
        
        Public Sub New()
            MyBase.New
            Me.SearchProperties(WinWindow.PropertyNames.Name) = "Running applications"
            Me.SearchProperties(WinWindow.PropertyNames.ClassName) = "MSTaskSwWClass"
            Me.WindowTitles.Add("Running applications")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIRunningapplicationsToolBar() As UIRunningapplicationsToolBar
            Get
                If (Me.mUIRunningapplicationsToolBar Is Nothing) Then
                    Me.mUIRunningapplicationsToolBar = New UIRunningapplicationsToolBar(Me)
                End If
                Return Me.mUIRunningapplicationsToolBar
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIRunningapplicationsToolBar As UIRunningapplicationsToolBar
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UIRunningapplicationsToolBar
        Inherits WinToolBar
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinToolBar.PropertyNames.Name) = "Running applications"
            Me.WindowTitles.Add("Running applications")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIVshost32clr2exeMenuButton() As WinControl
            Get
                If (Me.mUIVshost32clr2exeMenuButton Is Nothing) Then
                    Me.mUIVshost32clr2exeMenuButton = New WinControl(Me)
                    Me.mUIVshost32clr2exeMenuButton.SearchProperties(UITestControl.PropertyNames.Name) = "vshost32-clr2.exe"
                    Me.mUIVshost32clr2exeMenuButton.SearchProperties(UITestControl.PropertyNames.ControlType) = "MenuButton"
                    Me.mUIVshost32clr2exeMenuButton.WindowTitles.Add("Running applications")
                End If
                Return Me.mUIVshost32clr2exeMenuButton
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIVshost32clr2exeMenuButton As WinControl
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UIUsersWindow
        Inherits WinWindow
        
        Public Sub New()
            MyBase.New
            Me.SearchProperties(WinWindow.PropertyNames.Name) = "Users"
            Me.SearchProperties.Add(New PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains))
            Me.WindowTitles.Add("Users")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIAddNewWindow() As UIAddNewWindow
            Get
                If (Me.mUIAddNewWindow Is Nothing) Then
                    Me.mUIAddNewWindow = New UIAddNewWindow(Me)
                End If
                Return Me.mUIAddNewWindow
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIAddNewWindow As UIAddNewWindow
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UIAddNewWindow
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "btnAddNew"
            Me.WindowTitles.Add("Users")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIAddNewButton() As WinButton
            Get
                If (Me.mUIAddNewButton Is Nothing) Then
                    Me.mUIAddNewButton = New WinButton(Me)
                    Me.mUIAddNewButton.SearchProperties(WinButton.PropertyNames.Name) = "Add New"
                    Me.mUIAddNewButton.WindowTitles.Add("Users")
                End If
                Return Me.mUIAddNewButton
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIAddNewButton As WinButton
        #End Region
    End Class
End Namespace
